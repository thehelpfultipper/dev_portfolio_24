{"version":3,"file":"component---src-pages-portfolio-js-02723f2ab13d88291168.js","mappings":"0IAGIA,EAAyB,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,OAChDG,EAAc,EAAQ,MACXF,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,kDACD,oB,kaCRJ,GAAe,EAAAC,EAAA,IAA4B,SAAK,OAAQ,CACtDD,EAAG,mDACD,mB,UCLOE,EAAS,iCACTC,EAAO,+BACPC,EAAY,oCACZC,EAAa,qCACbC,EAAiB,yCACjBC,EAAkB,0CAClBC,EAAO,+BCKlB,MAAMC,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAe,CAChCE,WAAY,SACZC,MAAO,MACPC,OAAQ,MACRC,QAAS,IACTC,SAAU,WACVC,IAAK,YACLC,KAAM,YACNC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,YAAa,kBACbC,MAAO,kBACP,UAAW,CACPD,YAAa,mBAEjB,4BAA6B,CACzBN,SAAU,SACVQ,SAAU,QACVX,MAAO,OACPC,OAAQ,OACRC,QAAS,IACTH,WAAY,aAIL,SAASa,EAAaC,GAAkB,IAAjB,aAACC,GAAaD,EAChD,MAAM,EAAEE,EAAU,EAACC,IAAiBC,EAAAA,EAAAA,UAAS,QACvC,EAAEC,EAAO,EAACC,IAAcF,EAAAA,EAAAA,WAAS,GACjCG,GAAWC,EAAAA,EAAAA,eACXC,GAAUC,EAAAA,EAAAA,QAAO,MAEjBC,EAAiBC,IACnBT,EAAaS,GACbX,EAAaW,GACbP,GAAUC,GAAWD,GAGrBI,EAAQI,QAAQC,UAAUC,OAAOC,EAAO,EAGtCC,EAAgBC,EAAAA,EAAWC,KAAI,CAACP,EAAUQ,IAExCC,EAAAA,cAAA,UACIC,KAAK,SACLC,UAAeP,GAAcJ,IAAaV,EAAS,IAAOc,EAAa,IACvEQ,IAAMJ,EACNK,QAAUA,IAAMd,EAAcC,IAE5BA,KAyBd,OAfAc,EAAAA,EAAAA,YAAU,KAEN,MAAMC,EAAcpB,EAASqB,OAMvBC,EAHe,IAAIC,gBAAgBH,GAGNI,IAAI,KAGvCF,GAAiBlB,EAAckB,EAAc,GAE9C,CAACtB,EAASqB,SAGTP,EAAAA,cAAA,OAAKE,UAAS,GAAMP,GAChBK,EAAAA,cAAA,SACIW,QAAQ,cACX,aACDX,EAAAA,cAAA,OACIY,GAAG,aACHV,UAAS,GAAMP,GAEfK,EAAAA,cAACtC,EAAY,CACTmD,QAAQ,WACR,gBAAgB,iBAChBC,QAAU9B,EAASgB,EAAAA,cAACe,EAAe,MAAMf,EAAAA,cAACgB,EAAAA,EAAqB,MAC/DZ,QAjCQa,KACpBhC,GAAWD,GACXI,EAAQI,QAAQC,UAAUyB,OAAOvB,EAAO,GAiC1Bd,GAENmB,EAAAA,cAAA,OACIY,GAAI,iBACJV,UAAeP,EAAY,KAAIA,aAAC,EAADA,GAC/BwB,IAAM/B,GAEJQ,IAKtB,C,cC1Ge,SAASwB,IACpB,MAAM,EAACC,EAAW,EAACC,IAAiBvC,EAAAA,EAAAA,UAAS,OAM7C,OACIiB,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,UAAQE,UAAS,aACbF,EAAAA,cAACuB,EAAAA,EAAK,KACFvB,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,SAAG,gDAEPA,EAAAA,cAACtB,EAAa,CAACa,SAAW8B,EAAazC,aAXpBW,IAC3B+B,EAAc/B,EAAS,KAYnBS,EAAAA,cAAA,WAASE,UAAS,aACdF,EAAAA,cAACwB,EAAAA,EAAa,CAACjC,SAAW8B,KAI1C,C,aCvBe,SAASI,IACpB,OAAOzB,EAAAA,cAACoB,EAAQ,KACpB,CAEO,SAASM,IACZ,OACI1B,EAAAA,cAAC2B,EAAAA,EAAG,CACAC,MAAM,YACNC,YAAY,gDAGxB,C","sources":["webpack://klea-merkuri-portofolio/./node_modules/@mui/icons-material/KeyboardArrowDown.js","webpack://klea-merkuri-portofolio/./node_modules/@mui/icons-material/esm/KeyboardArrowUp.js","webpack://klea-merkuri-portofolio/./src/styles/Projects.module.css","webpack://klea-merkuri-portofolio/./src/components/ProjectsFilter.js","webpack://klea-merkuri-portofolio/./src/components/Projects.js","webpack://klea-merkuri-portofolio/./src/pages/portfolio.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6z\"\n}), 'KeyboardArrowDown');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');","// extracted by mini-css-extract-plugin\nexport var active = \"Projects-module--active--ce51e\";\nexport var dMob = \"Projects-module--dMob--d4c65\";\nexport var filterBtn = \"Projects-module--filterBtn--5162b\";\nexport var filterBtns = \"Projects-module--filterBtns--ae840\";\nexport var filterBtnsMenu = \"Projects-module--filterBtnsMenu--7972e\";\nexport var filterContainer = \"Projects-module--filterContainer--db12f\";\nexport var show = \"Projects-module--show--ef068\";","import React, {useState, useEffect, useRef} from 'react';\nimport { useLocation } from '@reach/router';\nimport { styled } from '@mui/material/styles';\nimport { Button } from '@mui/material';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { KeyboardArrowUp } from '@mui/icons-material';\n\n\nimport { categories } from '../helpers/variables';\n\nimport * as s from '../styles/Projects.module.css';\n\nconst ToggleButton = styled(Button)({\n    visibility: 'hidden',\n    width: '1px',\n    height: '1px',\n    opacity: '0',\n    position: 'absolute',\n    top: '-999999px',\n    left: '-999999px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderColor: 'var(--grey-txt)',\n    color: 'var(--grey-txt)',\n    '&:hover': {\n        borderColor: 'var(--grey-txt)',\n    },\n    '@media (max-width: 545px)': {\n        position: 'static',\n        maxWidth: '145px',\n        width: '100%',\n        height: '100%',\n        opacity: '1',\n        visibility: 'visible'\n    }\n});\n\nexport default function ProjectFilter({onDisplayCat}) {\n    const [ activeBtn, setActiveBtn ] = useState('All');\n    const [ isOpen, setIsOpen ] = useState(false);\n    const location = useLocation();\n    const menuRef = useRef(null);\n\n    const filterHandler = (category) => {\n        setActiveBtn(category);\n        onDisplayCat(category);\n        isOpen && setIsOpen(!isOpen);\n\n        // Close the menu\n        menuRef.current.classList.remove(s.show);\n    }\n\n    const filterButtons = categories.map((category, index) => {\n        return (\n            <button\n                type=\"button\"\n                className={ `${s.filterBtn}${category === activeBtn ? ` ${s.active}` : ''}` }\n                key={ index }\n                onClick={ () => filterHandler(category) }\n            >\n                { category }\n            </button>\n        );\n    });\n\n    const showMenuHandler = () => {\n        setIsOpen(!isOpen);\n        menuRef.current.classList.toggle(s.show);\n    }\n\n    useEffect(() => {\n        // Access the query string from the current location\n        const queryString = location.search;\n\n        // Parse the query string into URLSearchParams\n        const searchParams = new URLSearchParams(queryString);\n\n        // Extract the specific query parameter you're interested in\n        const categoryParam = searchParams.get('q');\n\n        // Set the state with the extracted query parameter\n        categoryParam && filterHandler(categoryParam);\n        \n    }, [location.search]);\n\n    return (\n        <div className={ `${s.filterContainer}` }>\n            <label \n                htmlFor='filterMenu'\n            >Filters: </label>\n            <div \n                id='filterMenu'\n                className={ `${s.filterBtnsMenu}` }\n            >\n                <ToggleButton\n                    variant='outlined'\n                    aria-controls={ 'filterMenuList' }\n                    endIcon={ isOpen ? <KeyboardArrowUp /> : <KeyboardArrowDownIcon />}\n                    onClick={ showMenuHandler }\n                >\n                    { activeBtn}\n                </ToggleButton>\n                <div \n                    id={'filterMenuList'}\n                    className={ `${s.filterBtns} ${s?.dMob}` }\n                    ref={ menuRef }\n                >\n                    { filterButtons }\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useState } from 'react';\n\nimport Title from './Title';\nimport ProjectFilter from './ProjectsFilter';\nimport GridContainer from './Grid';\n\n\nexport default function Projects() {\n    const [displayCat, setDisplayCat] = useState('All');\n\n    const categorySelectHandler = (category) => {\n        setDisplayCat(category);\n    }\n\n    return (\n        <>\n            <header className={ `container` }>\n                <Title>\n                    <h2>Projects</h2>\n                    <p>Explore my latest projects and achievements</p>\n                </Title>\n                <ProjectFilter category={ displayCat } onDisplayCat={ categorySelectHandler } />\n            </header>\n            <section className={ `container` }>\n                <GridContainer category={ displayCat } />\n            </section>\n        </>\n    )\n}\n","import * as React from \"react\";\n\nimport Projects from \"../components/Projects\";\nimport SEO from \"../components/SEO\";\n\nexport default function PortfolioPage() {\n    return <Projects />;\n}\n\nexport function Head() {\n    return (\n        <SEO\n            title=\"Portfolio\"\n            description=\"Explore my latest projects and achievements.\"\n        />\n    );\n}"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","createSvgIcon","active","dMob","filterBtn","filterBtns","filterBtnsMenu","filterContainer","show","ToggleButton","styled","Button","visibility","width","height","opacity","position","top","left","display","justifyContent","alignItems","borderColor","color","maxWidth","ProjectFilter","_ref","onDisplayCat","activeBtn","setActiveBtn","useState","isOpen","setIsOpen","location","useLocation","menuRef","useRef","filterHandler","category","current","classList","remove","s","filterButtons","categories","map","index","React","type","className","key","onClick","useEffect","queryString","search","categoryParam","URLSearchParams","get","htmlFor","id","variant","endIcon","KeyboardArrowUp","KeyboardArrowDownIcon","showMenuHandler","toggle","ref","Projects","displayCat","setDisplayCat","Title","GridContainer","PortfolioPage","Head","SEO","title","description"],"sourceRoot":""}